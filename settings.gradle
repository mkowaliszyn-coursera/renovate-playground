import org.gradle.api.GradleException

/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/6.5.1/userguide/multi_project_builds.html
 */

rootProject.name = 'renovate-playground'

// For local development, look for a `~/.artifactory_credentials`
// file with user/password properties for accessing artifactory.
// However this file does not exist in the continuous integration
// builders, so we also support environmental variables. Below
// contains some inline logic to resolve this credential.
final def artifactoryCredentials = new Properties()
final def credentialFilepath = "${System.getProperty("user.home")}/.artifactory_credentials"
final def usernameEnvName = 'ARTIFACTORY_USERNAME'
final def passwordEnvName = 'ARTIFACTORY_PASSWORD'

try {
	file(credentialFilepath).withInputStream {
		artifactoryCredentials.load(it)
	}
} catch (ignored) {
	// Ignore
}

final def userFromEnvOrFile = artifactoryCredentials.getProperty(
		'user',
		System.getenv(usernameEnvName))
final def passwordFromEnvOrFile = artifactoryCredentials.getProperty(
		'password',
		System.getenv(passwordEnvName))

if (null == userFromEnvOrFile || null == passwordFromEnvOrFile) {
	throw new GradleException(
			'Artifactory repository credentials not set up. Neither the file ' +
					"`$credentialFilepath` exists with proper format " +
					"nor the `$usernameEnvName`/`$passwordEnvName` environment variables were provided. " +
					'Please search for `Set up Artifactory` in Confluence for instructions on the setup.')
}

gradle.ext.courseraArtifactoryUsername = userFromEnvOrFile
gradle.ext.courseraArtifactoryPassword = passwordFromEnvOrFile
gradle.ext.courseraArtifactoryUrl = 'https://artifactory.dkandu.me/artifactory/repo/'